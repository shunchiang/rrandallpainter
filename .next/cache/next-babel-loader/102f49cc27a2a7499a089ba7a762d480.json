{"ast":null,"code":"import combineReducers from \"./reducer\";\nimport thunk from \"redux-thunk\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\n\nvar initStore = function initStore(initialState, options) {\n  var composeEnhancers = compose; //Check if function running on the sever or client\n\n  if (!options.isServer) {\n    //Setup Redux Debuger\n    composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  }\n\n  var store = createStore(combineReducers, initialState, composeEnhancers(applyMiddleware(thunk) //Applying redux-thunk middleware\n  ));\n  return store;\n};\n\nexport default initStore;","map":{"version":3,"sources":["/Users/shunchiang/Documents/projects/rrandall/Redux/index.js"],"names":["combineReducers","thunk","createStore","applyMiddleware","compose","initStore","initialState","options","composeEnhancers","isServer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,WAA5B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,YAAD,EAAeC,OAAf,EAA2B;AAC3C,MAAIC,gBAAgB,GAAGJ,OAAvB,CAD2C,CAG3C;;AACA,MAAI,CAACG,OAAO,CAACE,QAAb,EAAuB;AACrB;AACAD,IAAAA,gBAAgB,GAAGE,MAAM,CAACC,oCAAP,IAA+CP,OAAlE;AACD;;AAED,MAAMQ,KAAK,GAAGV,WAAW,CACvBF,eADuB,EAEvBM,YAFuB,EAGvBE,gBAAgB,CACdL,eAAe,CAACF,KAAD,CADD,CACS;AADT,GAHO,CAAzB;AAQA,SAAOW,KAAP;AACD,CAlBD;;AAoBA,eAAeP,SAAf","sourcesContent":["import combineReducers from \"./reducer\";\nimport thunk from \"redux-thunk\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\n\nconst initStore = (initialState, options) => {\n  let composeEnhancers = compose;\n\n  //Check if function running on the sever or client\n  if (!options.isServer) {\n    //Setup Redux Debuger\n    composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  }\n\n  const store = createStore(\n    combineReducers,\n    initialState,\n    composeEnhancers(\n      applyMiddleware(thunk) //Applying redux-thunk middleware\n    )\n  );\n\n  return store;\n};\n\nexport default initStore;\n"]},"metadata":{},"sourceType":"module"}