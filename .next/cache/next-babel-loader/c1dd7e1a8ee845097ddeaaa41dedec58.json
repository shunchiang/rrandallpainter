{"ast":null,"code":"import combineReducers from \"./reducers\";\nimport thunk from \"redux-thunk\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\n\nconst initStore = (initialState, options) => {\n  let composeEnhancers = compose; //Check if function running on the sever or client\n\n  const store = createStore(combineReducers, initialState, composeEnhancers(applyMiddleware(thunk) //Applying redux-thunk middleware\n  ));\n  return store;\n};\n\nexport default initStore;","map":{"version":3,"sources":["/Users/shunchiang/Documents/projects/rrandall/Redux/index.js"],"names":["combineReducers","thunk","createStore","applyMiddleware","compose","initStore","initialState","options","composeEnhancers","store"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,YAA5B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;;AAEA,MAAMC,SAAS,GAAG,CAACC,YAAD,EAAeC,OAAf,KAA2B;AAC3C,MAAIC,gBAAgB,GAAGJ,OAAvB,CAD2C,CAG3C;;AAEA,QAAMK,KAAK,GAAGP,WAAW,CACvBF,eADuB,EAEvBM,YAFuB,EAGvBE,gBAAgB,CACdL,eAAe,CAACF,KAAD,CADD,CACS;AADT,GAHO,CAAzB;AAQA,SAAOQ,KAAP;AACD,CAdD;;AAgBA,eAAeJ,SAAf","sourcesContent":["import combineReducers from \"./reducers\";\nimport thunk from \"redux-thunk\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\n\nconst initStore = (initialState, options) => {\n  let composeEnhancers = compose;\n\n  //Check if function running on the sever or client\n\n  const store = createStore(\n    combineReducers,\n    initialState,\n    composeEnhancers(\n      applyMiddleware(thunk) //Applying redux-thunk middleware\n    )\n  );\n\n  return store;\n};\n\nexport default initStore;\n"]},"metadata":{},"sourceType":"module"}