{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport reducer from \"../Redux/loginReducer\";\n\n// create your reducer\nvar makeStore = function makeStore(context) {\n  return createStore(reducer);\n};\n\nexport var wrapper = createWrapper(makeStore, {\n  debug: true\n});","map":{"version":3,"sources":["/Users/shunchiang/Documents/projects/rrandall/Redux/index.ts"],"names":["createStore","createWrapper","reducer","makeStore","context","wrapper","debug"],"mappings":"AAAA,SAASA,WAAT,QAAuC,OAAvC;AACA,SAAoBC,aAApB,QAA2D,oBAA3D;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAMA;AAEA,IAAMC,SAA2B,GAAG,SAA9BA,SAA8B,CAACC,OAAD;AAAA,SAAsBJ,WAAW,CAACE,OAAD,CAAjC;AAAA,CAApC;;AAEA,OAAO,IAAMG,OAAO,GAAGJ,aAAa,CAAQE,SAAR,EAAmB;AAAEG,EAAAA,KAAK,EAAE;AAAT,CAAnB,CAA7B","sourcesContent":["import { createStore, AnyAction } from \"redux\";\nimport { MakeStore, createWrapper, Context, HYDRATE } from \"next-redux-wrapper\";\nimport reducer from \"../Redux/loginReducer\";\n\nexport interface State {\n  tick: string;\n}\n\n// create your reducer\n\nconst makeStore: MakeStore<State> = (context: Context) => createStore(reducer);\n\nexport const wrapper = createWrapper<State>(makeStore, { debug: true });\n"]},"metadata":{},"sourceType":"module"}